<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/+wAEUR1Y2t5AAEABAAAADwAAP/bAEMA
        BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8f
        Hx8fH//bAEMBBwcHDQwNGBAQGBoVERUaHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f
        Hx8fHx8fHx8fHx8fH//AABEIAIEAnQMBEQACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUG
        BwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQz
        YnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaH
        iImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy
        8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAAB
        AncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6
        Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqy
        s7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AOPr
        6k+cCgAoAKACgAoAKACgAoAKACgAoAKADigA4oAOPagBePb9aADj2/WgA49v1oAOPb9aAEoAKAOw8O+F
        9OSxt9U1gGU3bbbCwDeWHGdu+VuoTPpUJSnJqOy3ZniMRChFOWspfCv8/I2kmtPtklmmi6UBCXDyNAGV
        Vj6kvnJro+pR5VJynqeP/bdZzcVGnp69PmSxSWrXJtm0PTPODmLAtlxuBx61MsHG1+advU0hnFZy5XCF
        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
        ALQAtMD/2Q==
</value>
  </data>
</root>